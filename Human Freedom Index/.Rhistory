class(get_upper_tri(correlation_categorical))
class(melt(get_upper_tri(correlation_categorical)))
melt(get_upper_tri(correlation_categorical))
melt(get_upper_tri(correlation_categorical), na.rm = TRUE)
head(cor_cat_mat)
upper_tri_cor_cat_mat= get_upper_tri(correlation_categorical)
melted_upper_tri = melt(upper_tri_cor_cat_mat)
View(melted_upper_tri)
upper_tri_cor_cat_mat= get_upper_tri(correlation_categorical)
melted_upper_tri = melt(upper_tri_cor_cat_mat, na.rm = TRUE)
library(reshape2)
upper_tri_cor_cat_mat= get_upper_tri(correlation_categorical)
melted_upper_tri = melt(upper_tri_cor_cat_mat, na.rm = TRUE)
melted_upper_tri = na.omit(melted_upper_tri)
ggplot(melted_upper_tri, aes(X2,X1, fill = value)) + geom_tile(color = "white") + scale_fill_gradient2(low = "blue", high = "red", mid = "white",midpoint = 0, limit = c(-1,1),space = "Lab", name = "Pearson \n Correlation") + theme_minimal() + theme(axis.text.x =  element_text(angle = 90, vjust = 1, size = 7, hjust = 1)) +coord_fixed()
library(corrplot)
corrplot(correlation_categorical, method = "circle")
corrplot(correlation_categorical, method = "circle")
corrplot(correlation_categorical)
corrplot(correlation_categorical, mar = c(.1,.1,.1,.1))
{plot.new();dev.off()}
plot.new();dev.off()
corrplot(correlation_categorical)
plot.new()
corrplot(correlation_categorical)
corrplot(correlation_categorical, diag = FALSE, tl.pos = "td", tl.cex= 0.5, method = 'color', type = 'upper')
corrplot(correlation_categorical, diag = FALSE, tl.pos = "td", tl.cex= 1, method = 'color', type = 'upper')
corrplot(correlation_categorical, diag = FALSE, tl.pos = "td", tl.cex= 0.4, method = 'color', type = 'upper', mar = c(0,0,0,0))
ggcor(correlation_categorical)
install.packages("GGally")
library(GGally)
ggcor(correlation_categorical)
ggcorr(correlation_categorical)
ggcorr(correlation_categorical, hjust = 1, size = 5)
ggcorr(correlation_categorical, hjust = 1, size = 1)
ggcorr(correlation_categorical, hjust = 1, size = 3)
ggcorr(correlation_categorical, hjust = 1, size = 2)
par
par("fin")
par(mar = c(1,1,1,1))
ggcorr(correlation_categorical, hjust = 1, size = 2)
par(mar = c(.1,.1,.1,.1))
par("fin")
par("mar")
ggcorr(correlation_categorical, hjust = 1, size = 2)
ggcorr(correlation_categorical, hjust = 1, size = 2)+theme(axis.text = element_text(angle = 30))
df <- data.frame(
x = c(1, 1, 2, 2, 1.5),
y = c(1, 2, 1, 2, 1.5),
text = c("bottom-left", "bottom-right", "top-left", "top-right", "center")
)
ggplot(df, aes(x, y)) +
geom_text(aes(label = text))
ggplot(df, aes(x, y)) +
geom_text(aes(label = text), vjust = "inward", hjust = "inward")
ggcorr(correlation_categorical, hjust = 1, size = 2)+theme(axis.text = element_text(vjust = 1))
ggcorr(correlation_categorical, hjust = 1, size = 2)+theme(axis.text = element_text(vjust = 5))
ggcorr(correlation_categorical, hjust = 1, size = 2)+theme(axis.text = element_text(vjust = .01))
ggcorr(correlation_categorical, hjust = .05, size = 2)
ggcorr(correlation_categorical, hjust = .5, size = 2)
ggcorr(correlation_categorical, hjust = .1, size = 2)
ggcorr(correlation_categorical, hjust = .3, size = 2)
ggcorr(correlation_categorical, hjust = .3, size = 2, color = "grey50", layout.exp = 1)
ggcorr(correlation_categorical, hjust = .5, size = 2, layout.exp = 1)
ggcorr(correlation_categorical, hjust = .5, size = 2, layout.exp = 5)
ggcorr(correlation_categorical, hjust = 1, size = 2, layout.exp = 5)
ggcorr(correlation_categorical, hjust = 1, size = 2, layout.exp = 10)
ggcorr(correlation_categorical,hcorder = TRUE, hjust = 1, size = 2, layout.exp = 10)
ggcorr(correlation_categorical,hc.order = TRUE, hjust = 1, size = 2, layout.exp = 10)
ggcorrplot(correlation_categorical,hc.order = TRUE, hjust = 1, size = 2, layout.exp = 10)
install.packages("ggcorrplot")
library(ggcorrplot)
ggcorrplot(correlation_categorical,hc.order = TRUE, hjust = 1, size = 2, layout.exp = 10)
ggcorrplot(correlation_categorical,hc.order = TRUE)
ggcorrplot(correlation_categorical)
View(correlation_categorical)
data(mtcars)
corr <- round(cor(mtcars), 1)
ggcorrplot(corr)
ggcorrplot(corr, method = "circle")
ggcorrplot(cor_pmat(correlation_categorical))
corr
ggcorrplot(corr)
cor(mtcars)
ggcorrplot(cor(mtcars))
class(mtcars)
class(corr)
class(as.data.frame(corr))
ggcorrplot(as.data.frame(corr))
mtcars
cor(mtcars)
ggcorrplot(cor(mtcars))
dim(mtcars)
dim(cor(mtcars))
corrplot(corr)
corrplot(correlation_categorical)
corrplot(correlation_categorical, tl.cex = 0.5)
corrplot(correlation_categorical, tl.pos = "n")
corrplot(correlation_categorical, tl.pos = "d")
corrplot(correlation_categorical, tl.pos = "d",tl.cex = .3)
corrplot(correlation_categorical, tl.pos = "ld",tl.cex = .3)
corrplot(correlation_categorical, tl.pos = "ld",tl.cex = .3,type = "lower")
col = colorRampPalette(c("red", "white", "blue"))(20)
corrplot(correlation_categorical, tl.pos = "ld",tl.cex = .3,type = "lower", order = "hclust", col = col)
corrplot(correlation_categorical, tl.pos = "ld",tl.cex = .4,tl.col = "black",type = "lower", order = "hclust", col = col)
corrplot(correlation_categorical, tl.pos = "ld",tl.cex = .4,tl.col = "black",tl.srt =30, type = "lower", order = "hclust", col = col)
corrplot(correlation_categorical, tl.pos = "ld",tl.cex = .4,tl.col = "black",tl.srt =10, type = "lower", order = "hclust", col = col)
corrplot(correlation_categorical, tl.pos = "ld",tl.cex = .4,tl.col = "black",type = "lower", order = "hclust", col = col)
cat_p.mat = cor_pmat(correlation_allvariables_1)
cat_p.mat = cor_pmat(as.matrix(correlation_allvariables_1))
cat_p.mat = cor_pmat(as.data.frame(correlation_allvariables_1))
class(correlation_allvariables_1)
cat_p.mat = cor_pmat(data.matrix(correlation_allvariables_1))
head(cat_p.mat)
corrplot(correlation_categorical,type = "lower,tl.cex = 0.04, p.mat = cat_p.mat, sig.level = 0.05, col = col)
)
..
)))
stop
``
~))))))
save.image("~/Dropbox (Sydney Uni Student)/CSYS5050 and CSYS5051/code files/variables_29_08_2018_7_00.RData")
corrplot(correlation_categorical,tl.cex = 0.5,p.mat = cat_p.mat, sig.level = 0.05)
corrplot(correlation_categorical,tl.cex = 0.5, type = lower, p.mat = cat_p.mat, sig.level = 0.05)
corrplot(correlation_categorical,tl.cex = 0.5, type = "lower", p.mat = cat_p.mat, sig.level = 0.05)
corrplot(correlation_categorical, tl.pos = "ld",tl.cex = .4,tl.col = "black",tl.srt =30, type = "lower", order = "hclust", col = col)
corrplot(correlation_categorical, tl.pos = "ld",tl.cex = .4,tl.col = "black",type = "lower", order = "hclust", col = col)
ggcorr(correlation_categorical, hjust = 1, size = 2, layout.exp = 10)
corrplot(correlation_categorical, tl.pos = "ld",tl.cex = .4,tl.col = "black",type = "lower", order = "hclust", col = col, p.mat = cat_p.mat, sig.level = 0.05)
corrplot(correlation_categorical, tl.pos = "ld",tl.cex = .4,tl.col = "black", cl.ratio = 0.05,type = "lower", order = "hclust", col = col, p.mat = cat_p.mat, sig.level = 0.05)
corrplot(correlation_categorical, tl.pos = "ld",tl.cex = .4,tl.col = "black", cl.ratio = 0.05, cl.offset = 0.01,type = "lower", order = "hclust", col = col, p.mat = cat_p.mat, sig.level = 0.05)
corrplot(correlation_categorical, tl.pos = "ld",tl.cex = .4,tl.col = "black", cl.ratio = 0.05, cl.offset = 0,type = "lower", order = "hclust", col = col, p.mat = cat_p.mat, sig.level = 0.05)
corrplot(correlation_categorical, tl.pos = "ld",tl.cex = .4,tl.col = "black", cl.ratio = 0.05, cl.offset = 0,type = "lower", diag = FALSE, order = "hclust", col = col, p.mat = cat_p.mat, sig.level = 0.05)
corrplot(correlation_categorical,tl.cex = .4,tl.col = "black", cl.ratio = 0.05, cl.offset = 0,type = "upper",tl.srt = 45 , diag = FALSE, order = "hclust", col = col, p.mat = cat_p.mat, sig.level = 0.05)
corrplot(correlation_categorical, tl.pos = "ld",tl.cex = .4,tl.col = "black", cl.ratio = 0.05, cl.offset = 0,type = "lower", diag = FALSE, order = "hclust", col = col, p.mat = cat_p.mat, sig.level = 0.05)
View(cat_p.mat)
library(readr)
howmet_years <- read_csv("~/Dropbox (Sydney Uni Student)/CSYS5050 and CSYS5051/descriptive stats/howmet&years.csv")
View(howmet_years)
load("~/Dropbox (Sydney Uni Student)/CSYS5050 and CSYS5051/code files/variables_29_08_2018_4_21.RData")
load("~/Dropbox (Sydney Uni Student)/CSYS5050 and CSYS5051/code files/variables_29_08_2018_4_21.RData")
load("~/Dropbox (Sydney Uni Student)/CSYS5050 and CSYS5051/code files/variables_set.RData")
which(infoedgelist$`Years Known` == 2013)
which(infoedgelist$`Years Known` == '2013')
which(infoedgelist$`Years Known` == '2015')
infoedgelist[which(infoedgelist$`Years Known` == '2013'),]
colnames(infoedgelist)
infoedgelist[which(infoedgelist$`Years Known` == '2013'),16]
infoedgelist[which(infoedgelist$`Years Known` == '2013'),16]
infoedgelist[which(infoedgelist$`Years Known` == '2013'),16] <- 2018-2013
infoedgelist[which(infoedgelist$`Years Known` == '2013'),16] <- (2018-2013)
infoedgelist[which(infoedgelist$`Years Known` == '2013'),16]
View(infoedgelist)
infoedgelist[which(infoedgelist$`Years Known` == '2015'),16]
infoedgelist[which(infoedgelist$`Years Known` == '2015'),16]  <- (2018-2015)
View(howmet_years)
r = table(infoedgelist[,c(9,16)])
f = table(infoedgelist[,c(10,16)])
g = table(infoedgelist[,c(11,16)])
h = table(infoedgelist[,c(12,16)])
i = table(infoedgelist[,c(13,16)])
j = table(infoedgelist[,c(14,16)])
rbind(r,f,g,h,i,j)
howmet_years = rbind(r,f,g,h,i,j)
View(howmet_years)
row.names(howmet_years)
howmet_years= howmet_years[-c(1,3,5,9,199),]
howmet_years = rbind(r,f,g,h,i,j)
row.names(howmet_years)
howmet_years= howmet_years[-c(1,3,5,7,9,11),]
row.names(howmet_years)[9]
row.names(howmet_years)
row.names(howmet_years)[1]
row.names(howmet_years)[1] = "Relative"
row.names(howmet_years)[2] = "Farmer Group"
row.names(howmet_years)[3] = "Govt Institute"
row.names(howmet_years)[4] = "SCPP"
row.names(howmet_years)[5] = "Neighbhour"
row.names(howmet_years)[6] = "Relation Other"
summary(howmet_years[1,])
summary(howmet_years[2,])
write.csv(howmet_years, file = 'howmet_years.csv')
getwd()
trial_agg1 = aggregate(infoedgelist, by = list(infoedgelist$FarmerID), FUN = mean)
View(trial_agg1)
cor(trial_agg1[,c(3,9,10,11,12,13,14)])
colnames(trial_agg1)
cor(trial_agg1[,c(3,10,11,12,13,14)])
cor(trial_agg1[,c(10,11,12,13,14)])
corrplot(cor(trial_agg1[,c(10,11,12,13,14)]))
corrplot(cor(trial_agg1[,c(10,11,12,13,14,17)]))
trial_agg1[,c(10,11,12,13,14,17)]
cor(trial_agg1[,c(10,11,12,13,14,17)])
cor(trial_agg1[,c(10,17)])
trial_agg1$`Years Known`
trial_agg1$`Years Known`[is.na(trial_agg1$`Years Known`)]<- 0
cor(trial_agg1[,c(10,17)])
cor(trial_agg1[,c(10,11,12,13,14,17)])
table(trial_agg1[,c(10,11,12,13,14,17)])
corrplot(cor(trial_agg1[,c(10,11,12,13,14,17)]))
View(trial_agg1)
colnames(infoedgelist)
setwd("/Users/kiran/Dropbox (Sydney Uni Student)/CSYS5050 and CSYS5051/code files")
infoedgelist = read.csv(file = 'Pilotedgelist2anonymous.csv')
#converting all categorical variables into numbers
nedgelist <- infoedgelist
negdelist$Gender <- nedgelist$Gender == '1 - Male'
#converting all categorical variables into numbers
nedgelist = infoedgelist
negdelist$Gender <- nedgelist$Gender == '1 - Male'
View(nedgelist)
#converting all categorical variables into numbers
nedgelist = infoedgelist
nedgelist$Gender <- nedgelist$Gender == '1 - Male'
nedgelist$PeopleGender <- nedgelist$PeopleGender == '1 - Male'
nedgelist[which(nedgelist$Where.She.He.Lives == '1 - Lives in the same dusun'),8] = 1
nedgelist[which(nedgelist$Where.She.He.Lives == '2 - Lives in different Dusun but same Village'),8] = 2
nedgelist[which(nedgelist$Where.She.He.Lives == '3 - Lives in different Village but same sub-district'),8] = 3
nedgelist[which(nedgelist$Where.She.He.Lives == '4 - Lives in different sub-district but in Tanggamus'),8] = 4
nedgelist[which(nedgelist$Where.She.He.Lives == '5 - Lives outside Tanggamus'),8] = 5
View(nedgelist)
save.image("~/Dropbox (Sydney Uni Student)/CSYS5050 and CSYS5051/code files/variables_31_08_2018_9-20.RData")
load("/Users/kiran/Dropbox (Sydney Uni Student)/CSYS5050 and CSYS5051/code files/variables_31_08_2018_9-20.RData")
nedgelist[which(nedgelist$Where.She.He.Lives == '1 - Lives in the same dusun'),8] = '1'
nedgelist[which(nedgelist$Where.She.He.Lives == '1 - Lives in the same dusun'),8]
View(nedgelist)
nedgelist[which(nedgelist$Where.She.He.Lives == '1 - Lives in the same dusun'),8]
which(nedgelist$Where.She.He.Lives == '1 - Lives in the same dusun')
which(nedgelist$Where.She.He.lives == '1 - Lives in the same dusun')
nedgelist[which(nedgelist$Where.She.He.lives == '1 - Lives in the same dusun'),8]
nedgelist[which(nedgelist$Where.She.He.lives == '1 - Lives in the same dusun'),8] = 1
nedgelist$Where.She.He.lives[is.na(nedgelist$Where.She.He.lives)]
nedgelist$Where.She.He.lives[is.na(nedgelist$Where.She.He.lives)] <- 1
nedgelist$Where.She.He.lives[is.na(nedgelist$Where.She.He.lives)] <- as.numeric('1')
class(nedgelist$Where.She.He.lives)
levels(nedgelist$Where.She.He.lives)
levels(nedgelist$Where.She.He.lives) <- 0:5
nedgelist$Where.She.He.lives = infoedgelist$Where.She.He.lives
levels(nedgelist$Where.She.He.lives) <- 0:5
levels(nedgelist$Relation...Family.Relative)
levels(nedgelist$Relation...Farmer.group.member)
levels(nedgelist$PeopleStatus)
levels(nedgelist$MAIN.mode.of.contact..How.do.you.usually.contact.this.person.)
levels(nedgelist$MAIN.mode.of.contact..How.do.you.usually.contact.this.person.)
levels(nedgelist$MAIN.mode.of.contact..How.do.you.usually.contact.this.person.)<- 0:7
levels(nedgelist$If.you.have.ANOTHER.common.way.to.contact..this.person..what.is.it)
levels(nedgelist$If.you.have.ANOTHER.common.way.to.contact..this.person..what.is.it)<- 0:6
levels(nedgelist$If.you.have.ANOTHER.common.way.to.contact..this.person..what.is.it)
levels(nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.MAIN.MODE.OF.CONTACT
)
levels(nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.MAIN.MODE.OF.CONTACT)<- 0:7
levels(nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.SECOND.MODE.OF.CONTACT)<- 0:7
levels(nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.SECOND.MODE.OF.CONTACT)
levels(infoedgelist$How.often.do.you.usually.contact.this.person.BY.THE.SECOND.MODE.OF.CONTACT)
levels(infoedgelist$How.often.do.you.usually.contact.this.person.BY.THE.MAIN.MODE.OF.CONTACT)
levels(nedgelist$Where.She.He.lives) <- 0:5
levels(nedgelist$Relation...Family.Relative)<- 0:1
levels(nedgelist$Relation...Farmer.group.member)<-0:1
levels(nedgelist$Relation...Know.through.government.institution)<-0:1
levels(nedgelist$Relation...Know.meet.during.the.training.SCPP)<-0:1
levels(nedgelist$Relationship.with.the.person.Neighbor)<-0:1
levels(nedgelist$Relation...Other)<-0:1
nedgelist[which(nedgelist$PeopleStatus == '1 - Registered in CH'),6]
nedgelist[which(nedgelist$PeopleStatus == '1 - Registered in CH'),6] < - 1
nedgelist[which(nedgelist$PeopleStatus == 'Registered in Cocoa Trace'),6] < - 1
nedgelist[which(nedgelist$PeopleStatus == 'Registered in CocoaTrace'),6] < - 1
levels(nedgelist$PeopleStatus)
is.na(nedgelist$PeopleStatus)
levels(nedgelist$Is.s.he.the.household.head)
levels(nedgelist$Is.s.he.the.household.head)< - 0:2
levels(nedgelist$Is.s.he.the.household.head)<- 0:2
trial_agg1<-aggregate(nedgelist,by=list(nedgelist$FarmerID), FUN=mean)
View(trial_agg1)
class(nedgelist$Where.She.He.lives)
class(nedgelist)
as.numeric(levels(nedgelist))[nedgelist]
trial_agg1<-aggregate(as.matrix(nedgelist),by=list(nedgelist$FarmerID), FUN=mean)
View(trial_agg1)
class(nedgelist$Relationship.with.the.person.Neighbor)
class(as.matrix(nedgelist))
as.numeric(as.character(nedgelist$Is.s.he.the.household.head))
as.numeric(as.character(nedgelist))
View(trial_agg1)
nedgelist$PeopleStatus = as.numeric(as.character(nedgelist$PeopleStatus))
nedgelist$Is.s.he.the.household.head = as.numeric(as.character(nedgelist$Is.s.he.the.household.head))
nedgelist$PeopleStatus= infoedgelist$PeopleStatus
colnames(nedgelist)
head(nedgelist[,c(17,18,19,20)])
head(nedgelist[,c(17,18,19,20)]) = as.numeric(as.character(nedgelist[,c(17,18,19,20)]))
nedgelist[,c(17,18,19,20)] = as.numeric(as.character(nedgelist[,c(17,18,19,20)]))
head(nedgelist[,c(17,18,19,20)])
levels(nedgelist$MAIN.mode.of.contact..How.do.you.usually.contact.this.person.)
levels(infoedgelist$If.you.have.ANOTHER.common.way.to.contact..this.person..what.is.it)
levels(infoedgelist$How.often.do.you.usually.contact.this.person.BY.THE.MAIN.MODE.OF.CONTACT)
nedgelist[,c(17,18,19,20)] = infoedgelist[,c(17,18,19,20)]
levels(nedgelist$MAIN.mode.of.contact..How.do.you.usually.contact.this.person.) <- 0:7
levels(nedgelist$If.you.have.ANOTHER.common.way.to.contact..this.person..what.is.it) <- 0:7
levels(nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.MAIN.MODE.OF.CONTACT)<-0:7
levels(nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.SECOND.MODE.OF.CONTACT)<- 0:7
nedgelist$MAIN.mode.of.contact..How.do.you.usually.contact.this.person. = as.numeric(as.character(nedgelist$MAIN.mode.of.contact..How.do.you.usually.contact.this.person.))
nedgelist$If.you.have.ANOTHER.common.way.to.contact..this.person..what.is.it = as.numeric(as.character(nedgelist$If.you.have.ANOTHER.common.way.to.contact..this.person..what.is.it))
nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.MAIN.MODE.OF.CONTACT = as.character(as.numeric(nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.MAIN.MODE.OF.CONTACT))
nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.SECOND.MODE.OF.CONTACT = as.character(as.numeric(nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.SECOND.MODE.OF.CONTACT))
nedgelist$Is.s.he.the.household.head = as.numeric(as.character(nedgelist$Is.s.he.the.household.head))
nedgelist$Where.She.He.lives = as.numeric(as.character(nedgelist$Where.She.He.lives))
nedgelist$Relation...Family.Relative = as.numeric(as.character(nedgelist$Relation...Family.Relative))
nedgelist$Relation...Farmer.group.member= as.numeric(as.character(nedgelist$Relation...Farmer.group.member))
nedgelist$Relation...Know.through.government.institution = as.numeric(as.character(nedgelist$Relation...Know.through.government.institution))
nedgelist$Relation...Know.meet.during.the.training.SCPP = as.numeric(as.character(nedgelist$Relation...Know.meet.during.the.training.SCPP))
nedgelist$Relation...Know.through.government.institution = as.numeric(as.character(nedgelist$Relation...Know.through.government.institution))
View(trial_agg1)
trial_agg1<-aggregate(nedgelist,by=list(nedgelist$FarmerID), FUN=mean)
View(trial_agg1)
class(nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.MAIN.MODE.OF.CONTACT)
nedgelist$If.you.have.ANOTHER.common.way.to.contact..this.person..what.is.it = as.numeric(as.character(nedgelist$If.you.have.ANOTHER.common.way.to.contact..this.person..what.is.it))
nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.MAIN.MODE.OF.CONTACT = as.numeric(as.character(as.numeric(nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.MAIN.MODE.OF.CONTACT)))
nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.SECOND.MODE.OF.CONTACT = as.numeric(as.character(as.numeric(nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.SECOND.MODE.OF.CONTACT)))
setwd("/Users/kiran/Dropbox (Sydney Uni Student)/CSYS5050 and CSYS5051/code files")
infoedgelist = read.csv(file = 'Pilotedgelist2anonymous.csv')
#agreggating
trial_agg1<-aggregate(nedgelist,by=list(nedgelist$FarmerID), FUN=mean)
#converting factors into numerics
nedgelist$Is.s.he.the.household.head = as.numeric(as.character(nedgelist$Is.s.he.the.household.head))
nedgelist$Where.She.He.lives = as.numeric(as.character(nedgelist$Where.She.He.lives))
nedgelist$Relation...Family.Relative = as.numeric(as.character(nedgelist$Relation...Family.Relative))
nedgelist$Relation...Farmer.group.member= as.numeric(as.character(nedgelist$Relation...Farmer.group.member))
nedgelist$Relation...Know.through.government.institution = as.numeric(as.character(nedgelist$Relation...Know.through.government.institution))
nedgelist$Relation...Know.meet.during.the.training.SCPP = as.numeric(as.character(nedgelist$Relation...Know.meet.during.the.training.SCPP))
nedgelist$Relation...Know.through.government.institution = as.numeric(as.character(nedgelist$Relation...Know.through.government.institution))
nedgelist$Relationship.with.the.person.Neighbor = as.numeric(as.character(nedgelist$Relationship.with.the.person.Neighbor))
nedgelist$Relation...Other = as.numeric(as.character(nedgelist$Relation...Other))
nedgelist$MAIN.mode.of.contact..How.do.you.usually.contact.this.person. = as.numeric(as.character(nedgelist$MAIN.mode.of.contact..How.do.you.usually.contact.this.person.))
nedgelist$If.you.have.ANOTHER.common.way.to.contact..this.person..what.is.it = as.numeric(as.character(nedgelist$If.you.have.ANOTHER.common.way.to.contact..this.person..what.is.it))
nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.MAIN.MODE.OF.CONTACT = as.numeric(as.character(as.numeric(nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.MAIN.MODE.OF.CONTACT)))
nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.SECOND.MODE.OF.CONTACT = as.numeric(as.character(as.numeric(nedgelist$How.often.do.you.usually.contact.this.person.BY.THE.SECOND.MODE.OF.CONTACT)))
#agreggating
trial_agg1<-aggregate(nedgelist,by=list(nedgelist$FarmerID), FUN=mean)
colnames(trial_agg1)
mtcars
corrplot(mtcars)
library(corrplot)
corrplot(mtcars)
cor(mtcars)
head(cor(trial_agg1[,c(4,6,8,9,10,11,12,13,14,15,17,18,19,20,21)]))
cor_trial_agg1 = cor(trial_agg1[,c(4,6,8,9,10,11,12,13,14,15,17,18,19,20,21)])
View(cor_trial_agg1)
is.na(trial_agg1$For.how.many.years.have.you.known.this.person)
corrplot(cor_trial_agg1)
corrplot(cor_trial_agg1, tl.cex = 0.1)
corrplot(cor_trial_agg1, tl.cex = 0.5)
corrplot(cor_trial_agg1, tl.cex = 0.3)
corrplot(cor(mtcars))
cor_trial_agg1 = cor(trial_agg1[,c(4,6,8,9,10,11,12,13,14,15,17,18,19,20,21)], use = complete.obs)
cor_trial_agg1 = cor(trial_agg1[,c(4,6,8,9,10,11,12,13,14,15,17,18,19,20,21)], use = "complete.obs")
View(cor_trial_agg1)
dim(cor_trial_agg1)
dim(trial_agg1[,c(4,6,8,9,10,11,12,13,14,15,17,18,19,20,21)
)
dim(trial_agg1[,c(4,6,8,9,10,11,12,13,14,15,17,18,19,20,21)])
corrplot(cor_trial_agg1, tl.cex = 0.1)
corrplot(cor_trial_agg1, tl.pos = "ld", tl.col = "black", type = "lower", tl.cex = 0.1)#- is this even
corrplot(cor_trial_agg1, tl.pos = "ld", tl.col = "black", type = "lower", tl.cex = 0.25)#- is this even
par(op)
par(oma[2] =0.5)
par(oma=c(1, 0.5, 3, 2))
corrplot(cor_trial_agg1, tl.pos = "ld", tl.col = "black", type = "lower", tl.cex = 0.25)#- is this even
par(oma=c(1, 0.5, 1, 1))
corrplot(cor_trial_agg1, tl.pos = "ld", tl.col = "black", type = "lower", tl.cex = 0.25)#- is this even
par(oma=c(1, 0, 1, 3))
corrplot(cor_trial_agg1, tl.pos = "ld", tl.col = "black", type = "lower", tl.cex = 0.35)#- is this even
corrplot(cor_trial_agg1, tl.pos = "ld", tl.col = "black", type = "lower", tl.cex = 0.5)#- is this even
colnames(cor_trial_agg1)
colnames(cor_trial_agg1)[3] = "HouseHead"
colnames(cor_trial_agg1)[4] = "Location"
colnames(cor_trial_agg1)[5] = "Relative"
colnames(cor_trial_agg1)[6] = "FarmerGroup"
colnames(cor_trial_agg1)[7] = "GovtInst"
colnames(cor_trial_agg1)[8] = "SCPP"
colnames(cor_trial_agg1)[9] = "Neighbhour"
colnames(cor_trial_agg1)[10] = "OtherRel"
colnames(cor_trial_agg1)[11] = "Years"
colnames(cor_trial_agg1)[12] = "PrimaryContMode"
colnames(cor_trial_agg1)[13] = "SecondaryContMode"
colnames(cor_trial_agg1)[14] = "PrimaryContFreq"
colnames(cor_trial_agg1)[15] = "SecondaryContFreq"
corrplot(cor_trial_agg1, tl.pos = "ld", tl.col = "black", type = "lower", tl.cex = 0.5)#- is this even
row.names(cor_trial_agg1) = colnames(cor_trial_agg1)
corrplot(cor_trial_agg1, tl.pos = "ld", tl.col = "black", type = "lower", tl.cex = 0.5)#- is this even
pmat_trial_agg1 = cor_pmat(trial_agg1[,c(4,6,8,9,10,11,12,13,14,15,17,18,19,20,21)
)
pmat_trial_agg1 = cor_pmat(trial_agg1[,c(4,6,8,9,10,11,12,13,14,15,17,18,19,20,21)])
library(gcorrplot)
library(ggcorrplot)
pmat_trial_agg1 = cor_pmat(trial_agg1[,c(4,6,8,9,10,11,12,13,14,15,17,18,19,20,21)])
corrplot(cor_trial_agg1, tl.pos = "ld", tl.col = "black", type = "lower", order = "hclust", tl.cex = 0.5, p.mat = pmat_trial_agg1, sig.level = 0.05)
colnames(nedgelist)
cor_nedgelist = cor(nedgelist[,c(3,5,7,8,9,10,11,12,13,14,16,17,18,19,20)],method = "pearson", use = "complete.obs")
View(cor_nedgelist)
corrplot(cor_nedgelist, tl.pos = "ld", tl.col = "black", type="lower", tl.cex = 0.5)
colnames(nedgelist)[7] = "HouseHead"
colnames(nedgelist)[8] = "Location"
colnames(nedgelist)[9] = "Relative"
colnames(nedgelist)[10] = "FarmerGroup"
colnames(nedgelist)[11] = "GovtInst"
colnames(nedgelist)[12] = "SCPP"
colnames(nedgelist)[13] = "Neighbhour"
colnames(nedgelist)[14] = "OtherRel"
colnames(nedgelist)[16] = "Years"
colnames(nedgelist)[17] = "PrimaryContMode"
colnames(nedgelist)[18] = "SecondaryContMode"
colnames(nedgelist)[19] = "PrimaryContFreq"
colnames(nedgelist)[20] = "SecondaryContFreq"
corrplot(cor_nedgelist, tl.pos = "ld", tl.col = "black", type="lower", tl.cex = 0.5)
colnames(nedgelist)[7] = "HouseHead"
colnames(nedgelist)[8] = "Location"
colnames(nedgelist)[9] = "Relative"
colnames(nedgelist)[10] = "FarmerGroup"
colnames(nedgelist)[11] = "GovtInst"
colnames(nedgelist)[12] = "SCPP"
colnames(nedgelist)[13] = "Neighbhour"
colnames(nedgelist)[14] = "OtherRel"
colnames(nedgelist)[16] = "Years"
colnames(nedgelist)[17] = "PrimaryContMode"
colnames(nedgelist)[18] = "SecondaryContMode"
colnames(nedgelist)[19] = "PrimaryContFreq"
colnames(nedgelist)[20] = "SecondaryContFreq"
cor_nedgelist = cor(nedgelist[,c(3,5,7,8,9,10,11,12,13,14,16,17,18,19,20)],method = "pearson", use = "complete.obs")
corrplot(cor_nedgelist, tl.pos = "ld", tl.col = "black", type="lower", tl.cex = 0.5)
corrplot(cor_nedgelist, tl.pos = "ld", tl.col = "black", type="lower", tl.cex = 0.5)
cor_nedgelist_pmat = cor_pmat(nedgelist[,c(3,5,7,8,9,10,11,12,13,14,16,17,18,19,20)])
corrplot(cor_nedgelist, tl.pos = "ld", tl.col = "black", type="lower", tl.cex = 0.5, order = 'hclust', p.mat = cor_nedgelist_pmat, sig.level = 0.05)
save.image("~/Dropbox (Sydney Uni Student)/CSYS5050 and CSYS5051/code files/variables_1_09_2018_5_20.RData")
install.packages("sf", type = "source")
install.packages("tmap")
install(g++)
install.packages("g++")
install.packages("sf", type = "source")
install.packages("sf",repos = NULL, type = "source")
install.packages("sf",repos = '/private/var/folders/y9/rzsh87qj5t56dxfxbd90gdx80000gn/T/Rtmp8uaSgd/downloaded_packages', type = "source")
library(readr)
hfi_cc_2018 <- read_csv("~/Documents/mywork/portfolio/datascience/Human Freedom Index/hfi_cc_2018.csv")
View(hfi_cc_2018)
dim(hfi_cc_2018)
colnames(hfi_cc_2018)
getwd()
setwd("~/Documents/mywork/portfolio/datascience/Human Freedom Index")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/mywork/portfolio/datascience/Human Freedom Index")
hfi_cc_2018 = read.csv("hfi_cc_2018.csv", row.names = FALSE)
setwd("~/Documents/mywork/portfolio/datascience/Human Freedom Index")
hfi_cc_2018 = read.csv("hfi_cc_2018.csv")
head(hfi_cc_2018)
colnames(hfi_cc_2018)
hfi_cc_2018$countries[1:10
]
dim(hfi_cc_2018)
unique(hfi_cc_2018$year)
length(unique(hfi_cc_2018$countries))
unique(hfi_cc_2018$year)
install.packages("tidyverse")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(tidyverse)
library(dplyr)
hf1_2008= filter(hfi_cc_2018, year == 2008)
library(tidyverse)
library(dplyr)
library(data.table)
startsWith(colnames(hf1_2008), "pf")
startsWith(colnames(hf1_2008), "pf_expression")
subset(hfi_cc_2018,subset = startsWith(colnames(hf1_2008), "pf_expression"))
subset(hfi_cc_2018, subset = (startsWith(colnames(hf1_2008), "pf_expression") & year == 2008))
subset(hfi_cc_2018, subset = startsWith(colnames(hf1_2008), "pf_expression")) %>% filter(year == 2008)
subset(hfi_cc_2018, subset = startsWith(colnames(hf1_2008), "pf_ex")) %>% filter(year == 2008)
hfi_cc_2018[startsWith(colnames(hf1_2008), "pf_ex")]
hfi_cc_2018[startsWith(colnames(hf1_2008), "pf_ex")] %>% filter(year == 2008)
filter(hfi_cc_2018, year == 2008)[startsWith(colnames(hf1_2008), "pf_ex")]
filter(hfi_cc_2018, year == 2008)[c(1:4,startsWith(colnames(hf1_2008), "pf_ex"))]
filter(hfi_cc_2018, year == 2008)[c(startsWith(colnames(hf1_2008), "pf_ex"))]
filter(hfi_cc_2018, year == 2008)[,c(1:4,startsWith(colnames(hf1_2008), "pf_ex"))]
filter(hfi_cc_2018, year == 2008)[,c(1,2,3,4,startsWith(colnames(hf1_2008), "pf_ex"))]
filter(hfi_cc_2018, year == 2008) %>% select(year, ISO_code)
View(hfi_cc_2018)
filter(hfi_cc_2018, year == 2008) %>% select(year, ISO_code, countries, region, starts_with('pf_ex'))
hfi_pf_exp_08 = hfi_cc_2018 %>% filter(year == 2008) %>% select(year, ISO_code, countries, region, starts_with('pf_ex'))
ggplot(hfi_pf_exp_08, aes(y = ISO_code, x = pf_expression_killed)) + geom_point()
hfi_pf_exp_08 = hfi_cc_2018 %>% filter(year == 2008) %>% select(year, ISO_code, countries, region, starts_with('pf_ex'))
ggplot(hfi_pf_exp_08, aes(x = ISO_code, y = pf_expression_killed)) + geom_point()
ggplot(hfi_pf_exp_08, aes(x = pf_expression_killed)) + geom_histogram()
table(hfi_pf_exp_08$pf_expression_killed)
table(hfi_pf_exp_08$pf_expression_jailed)
hfi_pf_rol_08 = hfi_cc_2018 %>% filter(year == 2008) %>% select(year, ISO_code, countries, region, starts_with('pf_rol'))
table(hfi_pf_rol_08$pf_rol_procedural)
summary(hfi_pf_rol_08$pf_rol_procedural)
summary(hfi_pf_rol_08$pf_rol_civil)
table(hfi_pf_rol_08$pf_rol_civil)
ggplot(hfi_pf_rol_08, aes (y = pf_rol_civil, x = ISO_code)) +geom_point()
DF <- data.frame(x = c(1, 2, 3), y = c(0, 10, NA))
na.omit(DF)
hfi_pf_rol_08 = hfi_cc_2018 %>% filter(year == 2008) %>% select(year, ISO_code, countries, region, starts_with('pf_rol')) %>% na.omit()
table(hfi_pf_rol_08$pf_rol_civil)
ggplot(hfi_pf_rol_08, aes (y = pf_rol_civil, x = ISO_code)) +geom_point()
ggplot(hfi_pf_rol_08, aes (y = pf_rol_civil, x = ISO_code)) +geom_point() +theme_minimal()
ggplot(hfi_pf_rol_08, aes (y = pf_rol_civil, x = ISO_code)) +geom_point() +theme_minimal() + theme(axis.text.x = element_text(size = 10, angle = 45))
ggplot(hfi_pf_rol_08, aes (y = pf_rol_civil, x = ISO_code)) +geom_point() +theme_minimal() + theme(axis.text.x = element_text(size = 5, angle = 45))
ggplot(hfi_pf_rol_08, aes (y = pf_rol_civil, x = ISO_code)) +geom_point() +theme_minimal() + theme(axis.text.x = element_text(face=bold,size = 5, angle = 45))
ggplot(hfi_pf_rol_08, aes (y = pf_rol_civil, x = ISO_code)) +geom_point() +theme_minimal() + theme(axis.text.x = element_text(face ="bold",size = 5, angle = 45))
ggplot(hfi_pf_rol_08, aes (y = pf_rol_civil, x = ISO_code)) +geom_point() +theme_minimal() + theme(axis.text.x = element_text(face ="bold",size = 7, angle = 45))
View(hfi_pf_rol_08)
hfi_pf_rol_08[,order(pf_rol_civil)]
hfi_pf_rol_08[order(pf_rol_civil),]
hfi_pf_rol_08[,order(hfi_pf_rol_08$pf_rol_civil)]
hfi_pf_rol_08[, order(pf_rol_civil) ]
